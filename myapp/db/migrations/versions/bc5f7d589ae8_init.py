"""init

Revision ID: bc5f7d589ae8
Revises: 
Create Date: 2021-01-28 09:58:54.368732

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.mysql import TIMESTAMP


# revision identifiers, used by Alembic.
revision = 'bc5f7d589ae8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('log',
    sa.Column('uuid', sa.String(length=64), nullable=False, comment='uuid'),
    sa.Column('user_uuid', sa.String(length=255), nullable=False, comment='产生操作日志所属的用户ID'),
    sa.Column('user_email', sa.String(length=255), nullable=False,
              comment='产生操作日志所属的用户email'),
    sa.Column('user_type', sa.String(length=50), nullable=False,
              comment='产生操作日志所属的用户类型admin/user'),
    sa.Column('app_type', sa.String(length=50), nullable=False,
              comment='表示发送的app类型，可以是android/ios/web'),
    sa.Column('app_release', sa.String(length=50), nullable=False, comment='版本号'),
    sa.Column('level', sa.String(length=50), nullable=False,
              comment='日志级别,DEBUG: 1, INFO: 2, ALERT: 3, ERROR: 4, FATAL: 5'),
    sa.Column('domain', sa.String(length=50), nullable=False, comment='表示这个log是关于哪个方面问题'),
    sa.Column('sub_domain', sa.String(length=50), nullable=False,
              comment='表示这个log是哪个细节方面的问题'),
    sa.Column('action', sa.String(length=255), nullable=False,
              comment='具体操作，比如create/update/delete等'),
    sa.Column('obj_id', sa.String(length=255), nullable=False, comment='操作对象id'),
    sa.Column('obj_name', sa.String(length=255), nullable=False, comment='操作对象name'),
    sa.Column('ref_id', sa.String(length=255), nullable=False, comment='涉及相关对象id'),
    sa.Column('ref_name', sa.String(length=255), nullable=False, comment='涉及相关对象的name'),
    sa.Column('status', sa.Enum('success', 'fail', 'unknown'), nullable=False, comment='操作的结果'),
    sa.Column('request_ip', sa.String(length=20), nullable=False, comment='操作的请求ip'),
    sa.Column('error_code', sa.String(length=64), nullable=False, comment='操作错误的错误码'),
    sa.Column('error_message', sa.TEXT(), nullable=False, comment='操作错误时记录错误信息'),
    sa.Column('extra', sa.TEXT(), nullable=False, comment='一些其他内容或者异常堆栈信息/上下文'),
    sa.Column('request_params', sa.BLOB(), nullable=True, comment='操作日志的请求参数'),
    sa.Column('response_body', sa.BLOB(), nullable=True, comment='操作对应返回的数据'),
    sa.Column('operation_desc', sa.String(length=1024), nullable=False, comment='可以被理解的描述信息'),
    sa.Column('created_at', TIMESTAMP(fsp=3), nullable=True, comment='创建时间'),
    sa.Column('updated_at', TIMESTAMP(fsp=3), nullable=True, comment='最后修改时间'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('desktop',
    sa.Column('created_at', TIMESTAMP(fsp=3), nullable=True, comment='创建时间'),
    sa.Column('updated_at', TIMESTAMP(fsp=3), nullable=True, comment='最后修改时间'),
    sa.Column('uuid', sa.String(length=64), nullable=False, comment='自定义桌面uuid'),
    sa.Column('vm_uuid', sa.String(length=64), nullable=False, comment='虚拟化平台上虚机的uuid'),
    sa.Column('display_name', sa.String(length=255), nullable=False, comment='桌面的显示名称'),
    sa.Column('is_attached_gpu', sa.Boolean(), nullable=False, comment='桌面是否挂载gpu'),
    sa.Column('is_default', sa.Boolean(), nullable=False, comment='是否是默认桌面，False表示不是，True表示是。默认False。'),
    sa.Column('enabled', sa.Enum('enabled', 'disabled'), nullable=False, comment='桌面的启用状态，enabled表示启用，disabled表示桌面已禁用'),
    sa.Column('node_uuid', sa.String(length=64), nullable=False, comment='物理机uuid'),
    sa.Column('node_name', sa.String(length=255), nullable=False, comment='物理机名称'),
    sa.Column('desc', sa.String(length=255), nullable=False, comment='桌面的描述信息'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_desktop_vm_uuid'), 'desktop', ['vm_uuid'], unique=True)
    op.create_table('user',
    sa.Column('created_at', TIMESTAMP(fsp=3), nullable=True, comment='创建时间'),
    sa.Column('updated_at', TIMESTAMP(fsp=3), nullable=True, comment='最后修改时间'),
    sa.Column('uuid', sa.String(length=64), nullable=False, comment='uuid'),
    sa.Column('login_name', sa.String(length=64), nullable=False, comment='登录名'),
    sa.Column('password', sa.String(length=255), nullable=False, comment='密码'),
    sa.Column('display_name', sa.String(length=255), nullable=False, comment='姓名'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='邮箱'),
    sa.Column('phone', sa.String(length=255), nullable=False, comment='电话'),
    sa.Column('enabled', sa.Enum('enabled', 'disabled'), nullable=False, comment='用户的启用状态，enabled表示启用，disabled表示禁用'),
    sa.Column('desc', sa.String(length=255), nullable=False, comment='描述信息'),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('login_name')
    )
    op.create_index(op.f('ix_user_display_name'), 'user', ['display_name'], unique=False)

    op.execute("insert into user(uuid,login_name,display_name,password,email,phone,user.desc,created_at,updated_at) values  "
               "('default_uuid', 'admin', 'admin', '$2b$12$LMvuoGYhCCBCswKAA1WpKeTIl3Bh94qsGsX4se6wu10pWfnbaZHuu', "
               "'', '', '', now(), now())")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_display_name'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_desktop_vm_uuid'), table_name='desktop')
    op.drop_table('log')
    op.drop_table('desktop')
    # ### end Alembic commands ###
